# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this file,
# You can obtain one at http://mozilla.org/MPL/2.0/.

# Required Plugins:
# ShellLink   http://nsis.sourceforge.net/ShellLink_plug-in

; Set verbosity to 3 (e.g. no script) to lessen the noise in the build logs
!verbose 3

; 7-Zip provides better compression than the lzma from NSIS so we add the files
; uncompressed and use 7-Zip to create a SFX archive of it
SetDatablockOptimize on
SetCompress off
CRCCheck on
SilentInstall silent

RequestExecutionLevel user

!addplugindir ./

; prevents compiling of the reg write logging.
!define NO_LOG

; Variables
Var AppFilename

; Variables used by common.nsh
Var TmpVal
Var BrandFullName
Var BrandFullNameDA
Var BrandShortName

; Other included files may depend upon these includes!
; The following includes are provided by NSIS.
!include "FileFunc.nsh"
!include "LogicLib.nsh"
!include "WinMessages.nsh"
!include "WinVer.nsh"
!include "WordFunc.nsh"

; Macros used by custom NSIS files
!define FileMainEXE           "$AppFilename.exe"

; These values are used in uninstall text
!define BrandFullNameInternal "Mozilla Webapp Runtime Native App"
!define BrandFullName         "Mozilla Webapp Runtime Native App"
!define BrandShortName        "Mozilla WebAppRT Native App"

; The following includes are custom.
!include "defines.nsi"
!include "common.nsh"
!include "locales.nsi"

!define CompanyName           "Mozilla Corporation"
!define UninstallerName       "Mozilla Webapp Runtime App Uninstaller"
!define UninstallerFilename   "webapp-uninstaller.exe"

VIProductVersion "1.0.0.0"
VIAddVersionKey "ProductName"     "${UninstallerName}"
VIAddVersionKey "CompanyName"     "${CompanyName}"
VIAddVersionKey "LegalCopyright"  "${CompanyName}"
VIAddVersionKey "FileVersion"     "${AppVersion}"
VIAddVersionKey "ProductVersion"  "${AppVersion}"
VIAddVersionKey "FileDescription" "${UninstallerName}"
VIAddVersionKey "OriginalFilename" "${UninstallerFilename}"

!insertmacro un.DeleteShortcuts
!insertmacro un.RegCleanUninstall
!insertmacro un.ParseUninstallLog

Name "${UninstallerName}"
OutFile "${UninstallerFilename}"
ShowUnInstDetails nevershow

################################################################################
# Install Sections
# The "installer" that is generated by this file will be run during the build
# process to generate an uninstaller.  We call `WriteUninstaller` during
# `onInit` so this section is empty.
Section ""
SectionEnd

################################################################################
# Uninstall Sections

Section "Uninstall"

  MessageBox MB_OKCANCEL "$(UN_CONFIRM_UNINSTALL)" /SD IDOK IDCANCEL done

  ; Delete the app exe to prevent launching the app while we are uninstalling.
  ClearErrors
  ${DeleteFile} "$INSTDIR\${FileMainEXE}"
  ${If} ${Errors}
    Push $0
    Push $1

    ; If the app is running, rename the EXE out of the way
    GetTempFilename $0
    StrCpy $1 "$INSTDIR\${FileMainEXE}"
    System::Call "kernel32::MoveFileEx(t, t, i) i ('$1', '$0', 0x1)"

    Pop $0
    Pop $1

    ClearErrors
  ${EndIf}


  SetShellVarContext current  ; Set SHCTX to HKCU
  ${un.RegCleanUninstall}
  ${un.DeleteShortcuts}

  ; Parse the uninstall log to unregister dll's and remove all installed
  ; files / directories this install is responsible for.
  ${un.ParseUninstallLog}
  ${RemoveDir} "$INSTDIR\chrome"

  ; Remove the uninstall directory that we control
  RmDir /r "$INSTDIR\uninstall"
  ${RemoveDir} "$INSTDIR\uninstall"

  ; Remove the installation directory if it is empty
  ${RemoveDir} "$INSTDIR"

  ; Refresh desktop icons otherwise the start menu internet item won't be
  ; removed and other ugly things will happen like recreation of the app's
  ; clients registry key by the OS under some conditions.
  System::Call "shell32::SHChangeNotify(i, i, i, i) v (0x08000000, 0, 0, 0)"

  done:

SectionEnd

################################################################################
# Language

!verbose push
!verbose 3
!include "overrideLocale.nsh"
!include "customLocale.nsh"
!verbose pop

; Set this after the locale files to override it if it is in the locale. Using
; " " for BrandingText will hide the "Nullsoft Install System..." branding.
BrandingText " "

# Initialization Functions
Function .onInit
  Push $0 ; Temp directory
  Push $1 ; Temp uninstaller location
  Push $2 ; Command line

  GetTempFileName $0
  Delete $0
  CreateDirectory $0
  SetOutPath $0

  StrCpy $1 "$0\${UninstallerFilename}"
  WriteUninstaller "$1"

  ${GetParameters} $2
  StrCpy $2 "_?=$EXEDIR $2"
  Exec '"$1" $2'

  Pop $2
  Pop $1
  Pop $0
FunctionEnd

Function un.onInit
  StrCpy $LANGUAGE 0

  ${un.GetParent} "$INSTDIR" $INSTDIR
  ${un.GetLongPath} "$INSTDIR" $INSTDIR

  !ifdef HAVE_64BIT_OS
    SetRegView 64
  !endif

  ReadINIStr $AppFilename "$INSTDIR\webapp.ini" "WebappRT" "Executable"
  ReadINIStr $BrandFullName "$INSTDIR\webapp.ini" "Webapp" "Name"

  StrCpy $BrandFullNameDA "$BrandFullName"
  StrCpy $BrandShortName "$BrandFullName"
FunctionEnd

Function un.onGUIEnd
FunctionEnd
